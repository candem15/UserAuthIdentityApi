@using Microsoft.AspNetCore.Identity
@using UserAuthIdentityApi.Data
@inject SignInManager<ApplicationUser> SignInManager /* Here we registered our ApplicationUser which is implemented from IdentityUser */
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    bool isAdmin = await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin");
    bool isSuperAdmin = await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "SuperAdmin");

    <li class="nav-item" style="align-self: center;"> <!-- If user have profile picture it will shown also in navbar-nav -->
        @if (UserManager.GetUserAsync(User).Result.ProfilePicture != null)
        {
            <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))">
        }
    </li>
    <li class="nav-item">
       <a class="nav-link btn btn-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hi @User.Identity.Name!</a>
    </li>
    <li class="nav-item">
        @if(isAdmin ||isSuperAdmin)
        {
            <a class="nav-link btn btn-link text-dark" asp-area="" asp-controller="Role" asp-action="Index">Manage Roles</a>
        }
    </li>
    <li class="nav-item">
        @if(isSuperAdmin)
        {
            <a class="nav-link btn btn-link text-dark" asp-area="" asp-controller="UserRoles" asp-action="Index">User's Roles</a>
        }
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout </button>
        </form>
    </li>
}
</ul>