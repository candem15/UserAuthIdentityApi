@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h4>@ViewData["Title"]</h4>
<form id="profile-form" method="post" enctype="multipart/form-data"> <!--/Here, we change the form type to “multipart/form-data”. This is because we not only have plain-texts but Image files too. -->
<partial name="_StatusMessage" model="Model.StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username"></label>
                <input asp-for="Username" class="form-control" disabled />
            </div>
            <div class="form-group">
                <label asp-for="Input.FirstName"></label>
                <input asp-for="Input.FirstName" class="form-control" />
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.LastName"></label>
                <input asp-for="Input.LastName" class="form-control" />
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.PhoneNumber"></label>
                <input asp-for="Input.PhoneNumber" class="form-control" />
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Country"></label>
                <input asp-for="Input.Country" class="form-control" />
                <span asp-validation-for="Input.Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Age"></label>
                <input asp-for="Input.Age" class="form-control" />
                <span asp-validation-for="Input.Age" class="text-danger"></span>
            </div>

            <button id="update-profile-button" type="submit" class="btn btn-primary">Save</button>
        </form>
    </div>
    <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group"> <!-- Here is where we define our Image Field. -->
                <label asp-for="Input.ProfilePicture" style="width: 100%;"></label>
                @if (Model.Input.ProfilePicture != null) // If the user has an image uploaded to the database already, we get the byte array from the model and convert it to an image. This image will be displayed on the page. Else, shows a blank image container.
                {
                    <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(Model.Input.ProfilePicture))">
                }
                else
                {
                    <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="">
                }
                <input type="file"
                       accept=".png,.jpg,.jpeg,.gif,.tif"
                       asp-for="Input.ProfilePicture"
                       class="form-control"
                       style="border:0px!important;padding: 0px;padding-top: 10px;padding-bottom: 30px;"
                       onchange="document.getElementById('profilePicture').src = window.URL.createObjectURL(this.files[0])" /> <!-- Defining the Input Button that can load images from our file system. -->
                <span asp-validation-for="Input.ProfilePicture" class="text-danger"></span>
            </div>
        </div>
</div>
</form>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}